import { CssBaseline, ThemeProvider } from "@mui/material";
import Head from "next/head";
import { Provider } from "react-redux";
import type { AppProps } from "next/app";

import { theme } from "../theme";
import { store, wrapper } from "../redux/store";
import "macro-css";
import "../styles/globals.scss";
import { parseCookies } from "nookies";
import { UserApi } from "../utils/api/user";
import { setUserData } from "../redux/slices/user";
import { Component } from "react";
import { Api } from "../utils/api";

function App({ Component, pageProps }: AppProps) {
  return (
    <>
      <Head>
        <title>React Journal</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/static/logo.svg" />

        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />

        <link
          href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap"
          rel="stylesheet"
        />
      </Head>
      <ThemeProvider theme={theme}>
        <CssBaseline />

        <Component {...pageProps} />
      </ThemeProvider>
    </>
  );
}

App.getInitialProps = wrapper.getInitialAppProps((store) => async ({ ctx, Component }) => {
  try {
    const userData = await Api(ctx).user.getMe();

    store.dispatch(setUserData(userData));
  } catch (error) {
    if (ctx.asPath === "/write") {
      ctx.res?.writeHead(302, { Location: "/403" });
      ctx.res?.end();
    }
    console.log(error);
  }
  return {
    pageProps: {
      ...(Component.getInitialProps ? await Component.getInitialProps({ ...ctx, store }) : {}),
    },
  };
});

export default wrapper.withRedux(App);
